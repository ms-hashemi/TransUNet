/work/sheidaei/conda/envs/mytorch/lib/python3.9/site-packages/torch/functional.py:504: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at /opt/conda/conda-bld/pytorch_1666643016022/work/aten/src/ATen/native/TensorShape.cpp:3190.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
Namespace(root_path='/work/sheidaei/mhashemi/data/deg', dataset='Degradation', list_dir='./lists/lists_Degradation', num_classes=2, max_iterations=288, max_epochs=1, batch_size=24, gpu=4, world_size=-1, rank=-1, dist_url='env://', dist_backend='nccl', local_rank=-1, deterministic=1, base_lr=0.01, img_size=[160, 160, 160], seed=1234, n_skip=4, vit_name='Conv-ViT-B_16', vit_patches_size=8, is_pretrain=True, exp='TV_Degradation[160, 160, 160]', distributed=False)
300 iterations per epoch. 300 max iterations 
  0%|                                           | 0/1 [00:00<?, ?it/s]iteration 1 : loss : 0.556507, loss_ce: 0.693167
iteration 2 : loss : 0.547118, loss_ce: 0.679368
iteration 3 : loss : 0.523925, loss_ce: 0.658293
iteration 4 : loss : 0.506401, loss_ce: 0.626940
iteration 5 : loss : 0.479240, loss_ce: 0.590828
iteration 6 : loss : 0.451481, loss_ce: 0.550870
iteration 7 : loss : 0.423884, loss_ce: 0.510790
iteration 8 : loss : 0.395476, loss_ce: 0.475429
iteration 9 : loss : 0.361283, loss_ce: 0.432711
iteration 10 : loss : 0.335648, loss_ce: 0.398215
iteration 11 : loss : 0.291546, loss_ce: 0.337050
iteration 12 : loss : 0.278084, loss_ce: 0.320150
iteration 13 : loss : 0.268079, loss_ce: 0.310427
iteration 14 : loss : 0.255595, loss_ce: 0.287181
iteration 15 : loss : 0.250251, loss_ce: 0.284600
iteration 16 : loss : 0.233413, loss_ce: 0.256594
iteration 17 : loss : 0.236075, loss_ce: 0.266833
iteration 18 : loss : 0.227873, loss_ce: 0.254210
iteration 19 : loss : 0.225358, loss_ce: 0.245838
iteration 20 : loss : 0.232068, loss_ce: 0.258771
  0%|                                           | 0/1 [15:33<?, ?it/s]
Traceback (most recent call last):
  File "/home/mhashemi/TransUNet/train_deg.py", line 156, in <module>
    trainer[dataset_name](args, model, snapshot_path)
  File "/home/mhashemi/TransUNet/trainer.py", line 178, in trainer_deg
    writer.add_images('train/GroundTruth', labs, iter_num, None, 'CHWN')
  File "/work/sheidaei/conda/envs/mytorch/lib/python3.9/site-packages/tensorboardX/writer.py", line 751, in add_images
    summary = image(tag, img_tensor, dataformats=dataformats)
  File "/work/sheidaei/conda/envs/mytorch/lib/python3.9/site-packages/tensorboardX/summary.py", line 282, in image
    tensor = convert_to_HWC(tensor, dataformats)
  File "/work/sheidaei/conda/envs/mytorch/lib/python3.9/site-packages/tensorboardX/utils.py", line 110, in convert_to_HWC
    assert(len(tensor.shape) == len(input_format)), "size of input tensor and input format are different. \
AssertionError: size of input tensor and input format are different.         tensor shape: (160, 160, 160), input_format: CHWN
